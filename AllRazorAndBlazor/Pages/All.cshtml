@page "/"
@model AllRazorAndBlazor.Pages.AllModel
@using System.ComponentModel;
@using AllRazorAndBlazor.Pages;
@using AllRazorAndBlazor;
@attribute [Description("The Description")]
@inherits Microsoft.AspNetCore.Mvc.RazorPages.Page
@inject IService MyService
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@implements IDisposable
@namespace CSHTMLPages

<!DOCTYPE html>
<html lang="en">
<head>
    <base href="~/" />
</head>
<body>
    <table>
        <tr>
            <th>MVC</th>
            <th>Blazor</th>
        </tr>
        <tr>
            <td>
                <p>@MyService</p>
                <p>@@MyService</p>
                <a href="mailto:Support@contoso.com">Support@contoso.com</a>

                <p>@DateTime.Now</p>
                <p>@DateTime.Parse("1/1/1900", provider: null)</p>

                <p>@await MyService.DoSomethingAsync()</p>

                <p>Last week this time: @(DateTime.Now - TimeSpan.FromDays(7))</p>

                @{
                    var abc = "xyz";
                }
                <p>Blah@(abc.Length)</p>

                <p>@(MyService.DoSomething<int>())</p>

                @{
                    var inCSharp = true;
                    <p>Now in HTML, was in C# @inCSharp</p>
                }

                @if (true)
                {
                    <text>Text @abc</text>
                }

                @for (var i = 0; i < 3; i++)
                {
                    @:Line: @i
                }

                <input type="checkbox" checked="@true" name="true" />
                <input type="checkbox" checked="@false" name="false" />
                <input type="checkbox" checked="@null" name="null" />

                @if (abc.Length == 0)
                {
                    <p>The length was zero.</p>
                }
                else if (abc.Length >= 1337)
                {
                    <p>The length is large.</p>
                }
                else
                {
                    <p>The length is small.</p>
                }

                @switch (abc.Length)
                {
                    case 1:
                        <p>The length is 1!</p>
                        break;
                    case 1337:
                        <p>The length is 1337!</p>
                        break;
                    default:
                        <p>The length wasn't 1 or 1337.</p>
                        break;
                }

                @foreach (var x in abc)
                {
                    <p>@x</p>
                }

                @{
                    var j = 0;
                }
                @while (j < abc.Length)
                {
                    var character = abc[j];
                    <p>@character</p>

                    j++;
                }

                @{
                    j = 0;
                }
                @do
                {
                    var character = abc[j];
                    <p>@character</p>

                    j++;
                } while (j < abc.Length);

                @using (MyService.GetDisposable())
                {
                    <p>Boo</p>
                }

                @try
                {
                    throw new InvalidOperationException("You did something invalid.");
                }
                catch (Exception ex)
                {
                    <p>The exception message: @ex.Message</p>
                }
                finally
                {
                    <p>The finally statement.</p>
                }

                @lock (abc)
                {
                    <p>Boo</p>
                }

                @{
                    /* C# comment */
                    // Another C# comment
                }
                <!-- HTML comment -->
                @* Razor comment *@

                @functions {
                    public string GetHello()
                    {
                        return "Hello";
                    }

                    private void RenderName(string name)
                    {
                        <p>Name: <strong>@name</strong></p>
                    }
                }

                <p>From method: @GetHello()</p>
                <p>
                    @{
                        RenderName("David");
                    }
                </p>

                @functions {
                    private bool _isDisposed;

                    public void Dispose() => _isDisposed = true;
                }

                @section TheSection
                {
                    <p>You can't see this'</p>
                }
            </td>
            <td>
                <component type="typeof(BlazorComponents.Index)" render-mode="ServerPrerendered" />
            </td>
        </tr>
    </table>

    <script src="_framework/blazor.server.js"></script>
</body>
</html>